{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Boat project","text":"<p>Welcome to the boat project. Use the navbar to look at sections of the project.</p>"},{"location":"jetson/install/","title":"Install","text":""},{"location":"jetson/install/#install-operating-system","title":"Install operating system","text":"<p>Install Jetpack Ubuntu OS using the jetpack jdk.</p> <p>Warning</p> <p>Make sure <code>/dev/mmcblk0p1</code> has more then 28gb of space or download wont work. Install gpart, remove all the non root partitions and then resize the root partition.</p>"},{"location":"jetson/install/#fix-partitions-optional","title":"Fix Partitions (Optional)","text":"<pre><code>sudo apt-get install gparted\n</code></pre> <p>Open gpart and find the drive with all the partitions. Delete everything evcept the root partition. Once that happens resive the root partition to take advantage of the whole hard drive.</p>"},{"location":"jetson/install/#setup-code-docker","title":"Setup code / Docker.","text":"<p>Open a terminal and grab the code. <pre><code>cd Desktop\ngit clone --recursive https://github.com/dusty-nv/jetson-inference\n</code></pre></p> <p>Docker setup script. (Takes ~30mins on shitty lab wifi.) <pre><code>cd jetson-inference\ndocker/run.sh\n</code></pre></p>"},{"location":"jetson/install/#basic-testing","title":"Basic testing.","text":"<p>Check what the camera name is: <pre><code>ls /dev/video*\n</code></pre></p> <p>Open the camera feed: <pre><code>video-viewer /dev/video0\n</code></pre></p> <p>Run your first object detection example (It will first install the model ~5mins): <pre><code>detectnet /dev/video0\n</code></pre></p>"},{"location":"jetson/organize/","title":"Orginize the data","text":"<ol> <li> <p>Create a version folder in <code>data/</code>. In this example we create <code>v2</code>.</p> </li> <li> <p>Copy your <code>train, test, and valid</code> data into the version folder.</p> </li> <li> <p>Go back into the main directory and run  <pre><code>cd ~/Desktop/boat/jetson/\n</code></pre> <pre><code>python3 organize.py --folder_to_organize=data/v2\n</code></pre></p> </li> <li> <p>In your v2 folder updated your <code>labels.txt</code> with the labels you used. You can check by opening the xml files from your data.</p> </li> <li> <p>Done. Your data is now in the proper format.</p> </li> </ol>"},{"location":"jetson/organize/#extra","title":"Extra","text":"<p>To copy using terminal</p> <pre><code>cp -r /media/boat/wilczak/pool_buoys.v1i.voc/* ~/Desktop/boat/jetson/data/v2/\n</code></pre>"},{"location":"jetson/run/","title":"Run","text":""},{"location":"jetson/run/#setup","title":"Setup:","text":"<p>Open a terminal and run this commands. To ssh <code>ssh boat@192.168.0.196</code>.       </p>"},{"location":"jetson/run/#control","title":"Control","text":"<p>Controls is when you want the craft to run it's control operations for the compitions. Make sure to. Need to rebuild containe to fix this but that takes a hot minute. You can also run using the camera <code>/dev/video0</code>.</p> <pre><code>cd Desktop/jetson-inference/\n\ndocker/run.sh --volume /home/boat/Desktop/boat/:/jetson-inference/boat/\n\ncd boat/\n\npip3 install pyserial-3.5-py2.py3-none-any.whl\n\ncd jetson\n\npython3 control.py --model=models/v3/mb1-ssd-Epoch-28-Loss-1.924500224325392.pth --labels=models/v3/labels.txt --input-width=640 --input-height=640 --input-blob=input_0 --output-cvg=scores --output-bbox=boxes --threshold=.15 --motor=1400 /dev/video0\n</code></pre>"},{"location":"jetson/run/#web-viewer-with-controls","title":"Web Viewer with Controls","text":"<p>Give the output to a server to view via a browser <code>webrtc://@:8554/output</code>.</p> <pre><code>cd Desktop/jetson-inference/\n\ndocker/run.sh --volume /home/boat/Desktop/boat/:/jetson-inference/boat/\n\ncd boat/\n\npip3 install pyserial-3.5-py2.py3-none-any.whl\n\ncd jetson\n\npython3 control.py --model=models/v3/mb1-ssd-Epoch-28-Loss-1.924500224325392.pth --labels=models/v3/labels.txt --input-width=640 --input-height=640 --input-blob=input_0 --output-cvg=scores --output-bbox=boxes --threshold=.15 --motor=1400 /jetson-inference/boat/tasks/run4.mp4 webrtc://@:8554/output\n</code></pre>"},{"location":"jetson/run/#videos","title":"Videos","text":"<p>The goal of this page is to show users how to run the controls code using a video. This is good for dry run testing to see how the controls would work without having to be in the water. Example video is <code>/jetson-inference/boat/tasks/run4.mp4</code>. Put your video in the <code>tasks/</code> folder and run the code below.</p> <pre><code>cd Desktop/jetson-inference/\n\ndocker/run.sh --volume /home/boat/Desktop/boat/:/jetson-inference/boat/\n\ncd jetson-inference/boat/jetson\n\npython3 control.py --model=models/v3/mb1-ssd-Epoch-28-Loss-1.924500224325392.pth --labels=models/v3/labels.txt --input-width=640 --input-height=640 --input-blob=input_0 --output-cvg=scores --output-bbox=boxes --threshold=.15 --motor=1400 /jetson-inference/boat/tasks/run4.mp4\n</code></pre>"},{"location":"jetson/train/","title":"Train and Save","text":"<p>The goal of this section is to retrain the <code>ssd-mobilenet</code> to recognize the objects you have labeled in your data.</p>"},{"location":"jetson/train/#setup","title":"Setup:","text":"<p>Open a terminal and run this commands. <pre><code>cd Desktop/jetson-inference/\n</code></pre> <pre><code>docker/run.sh --volume /home/boat/Desktop/boat/:/jetson-inference/boat/\n</code></pre> <pre><code>cd boat\n</code></pre></p>"},{"location":"jetson/train/#training","title":"Training","text":"<p>Make sure you have a version folder in `data`` with the proper orginized format. <pre><code>python3 train.py --dataset-type=voc --data=data/v2 --model-dir=models/v2 --batch-size=2 --workers=1 --epochs=5 --resolution=640\n</code></pre></p>"},{"location":"jetson/train/#save-the-model","title":"Save the model","text":"<p>Select the model you want to use. Look through your training results. <pre><code>python3 save.py --input=models/v2/mb1-ssd-Epoch-3-Loss-2.3346897708045113.pth --output=models/v2/ssd-mobilenet.onnx --labels=models/v2/labels.txt  --resolution=640\n</code></pre></p>"},{"location":"jetson/train/#run","title":"Run","text":"<p>Run the saved model to detect the objects. <pre><code>python3 detect.py --model=models/v3/mb1-ssd-Epoch-28-Loss-1.924500224325392.pth --labels=models/v3/labels.txt --input-width=640 --input-height=640 --input-blob=input_0 --output-cvg=scores --output-bbox=boxes --threshold=.15 /jetson-inference/boat/tasks/run4.mp4\n</code></pre></p>"},{"location":"pico/setup/","title":"Pico Setup:","text":""},{"location":"pico/setup/#install-ardunio","title":"Install Ardunio","text":"<p>Install ardunio with the pico uploader.</p> <p>-- IMAGE OF THE PACKAGE.</p>"},{"location":"pico/setup/#upload-code","title":"Upload Code:","text":""},{"location":"pico/setup/#radio-pico","title":"RADIO PICO:","text":"<p>LINK TO FILE</p>"},{"location":"pico/setup/#autonomous-pico","title":"AUTONOMOUS PICO:","text":"<p>LINK TO FILE</p>"}]}